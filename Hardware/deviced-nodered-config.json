[{"id":"4109f0c3.abecb","type":"azureiothub","z":"13ec881c.ab94f8","name":"Azure IoT Hub","protocol":"amqp","x":429,"y":344,"wires":[["87e99bdc.13df28"]]},{"id":"ee8818ab.dad6c8","type":"modbusSerial out","z":"13ec881c.ab94f8","port":"2a272b78.019634","slave":"4","start":"29","dtype":"holding","topic":"","name":"","x":490,"y":540,"wires":[]},{"id":"e740f762.9675a8","type":"inject","z":"13ec881c.ab94f8","name":"","topic":"","payload":"[1]","payloadType":"bin","repeat":"","crontab":"","once":false,"x":164,"y":542,"wires":[["ee8818ab.dad6c8"]]},{"id":"d0e30df8.fedf1","type":"inject","z":"13ec881c.ab94f8","name":"","topic":"","payload":"[0]","payloadType":"bin","repeat":"","crontab":"","once":false,"x":163,"y":599,"wires":[["ee8818ab.dad6c8"]]},{"id":"87e99bdc.13df28","type":"debug","z":"13ec881c.ab94f8","name":"Log","active":true,"console":"false","complete":"true","x":668,"y":385,"wires":[]},{"id":"2fe594d4.14971c","type":"modbusSerial in","z":"13ec881c.ab94f8","port":"2a272b78.019634","slaves":"4","start":"0","count":"29","dtype":"holding","period":"5","topic":"","name":"modbusRead","x":164,"y":106,"wires":[["b2384a5d.abcda8"]]},{"id":"26a6a2e6.87b6fe","type":"debug","z":"13ec881c.ab94f8","name":"","active":false,"console":"false","complete":"false","x":815,"y":211,"wires":[]},{"id":"b2384a5d.abcda8","type":"function","z":"13ec881c.ab94f8","name":"convertRawData","func":"var raw = Array.prototype.slice.call(msg.payload, 0);\nif (raw) {\n    var data = [];\n    var odd = true;\n    for(var i=0; i<raw.length; i++) {\n        if(odd) {\n            var value = new Buffer([raw[i], raw[i+1]]);\n            data.push(value.readInt16BE());\n        }\n        odd = !odd;\n    }\n    msg.payload = data;\n}\nreturn msg;","outputs":1,"noerr":0,"x":381,"y":146,"wires":[["1266d76b.a970a9"]]},{"id":"1266d76b.a970a9","type":"function","z":"13ec881c.ab94f8","name":"createMessage","func":"var d = msg.payload;\nif(d) {\n    var m = {\n        deviceId: \"PlazmotekRPi3\",\n        key: \"S2Xqb8s9K7yIqRwPJxA2F45pk3SA3MsfbtPOXErdVhQ=\",\n        protocol: \"amqp\",\n        data: {\n            id: \"PlazmotekRPi3\",\n            type: \"Diris_A10\",\n            count: 29,\n            u12:d[0]/10, u23:d[1]/10, u31:d[2]/10,\n            v1:d[3]/10, v2:d[4]/10, v3:d[5]/10, f:d[6]/10, \n            c1:d[7]/10, c2:d[8]/10, c3:d[9]/10, cn:d[10]/10,\n            p:d[11]/10, q:d[12]/10, s:d[13]/10,\n            p1:d[14]/10, p2:d[15]/10, p3:d[16]/10,\n            q1:d[17]/10, q2:d[18]/10, q3:d[19]/10,\n            s1:d[20]/10, s2:d[21]/10, s3:d[22]/10,\n            pf:d[23]/1000, pf1:d[24]/1000, \n            pf2:d[25]/1000, pf3:d[26]/1000,\n            ea:d[27]/10, er:d[28]/10\n        }\n    }\n    flow.set('sendMessage', m);\n}\nmsg.payload = m;\nreturn msg;\n/*\n        data: {\n            u12:d[0]/10, u23:d[1]/10, u31:d[2]/10,\n            v1:d[3]/10, v2:d[4]/10, v3:d[5]/10, f:d[6]/10, \n            c1:d[7]/10, c2:d[8]/10, c3:d[9]/10, cn:d[10]/10,\n            p:d[11]/10, q:d[12]/10, s:d[13]/10,\n            p1:d[14]/10, p2:d[15]/10, p3:d[16]/10,\n            q1:d[17]/10, q2:d[18]/10, q3:d[19]/10,\n            s1:d[20]/10, s2:d[21]/10, s3:d[22]/10,\n            pf:d[23]/1000, pf1:d[24]/1000, \n            pf2:d[25]/1000, pf3:d[26]/1000,\n            ea:d[27]/10, er:d[28]/10\n*/","outputs":1,"noerr":0,"x":604,"y":178,"wires":[["26a6a2e6.87b6fe"]]},{"id":"e88767a.4897798","type":"inject","z":"13ec881c.ab94f8","name":"Send Payload","topic":"","payload":"sendMessage","payloadType":"flow","repeat":"60","crontab":"","once":false,"x":195,"y":308,"wires":[["4109f0c3.abecb"]]},{"id":"2a272b78.019634","type":"modbusSerialConfig","z":"","port":"/dev/ttyUSB0","baud":"38400","data":"8","parity":"none","stop":"1","name":""}]